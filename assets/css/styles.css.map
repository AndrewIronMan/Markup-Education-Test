{"version":3,"sources":["abstracts/variables.scss","styles.css","abstracts/helpers.scss","abstracts/mixins.scss","base/reset.scss","base/typography.scss","../vendor_entries/_include-media-or.scss","base/forms.scss","components/hero-section.scss","components/history-section.scss","components/services-section.scss","components/header.scss","components/buttons/buttons.scss","components/buttons/arrow-btn.scss","components/option-card.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@import 'functions';\r\n\r\n// Global variables\r\n\r\n// 'rem' base value\r\n$rem: 10px;\r\n\r\n// Breakpoints for include media mixin\r\n$breakpoints: (\r\n  'phone': 480px,\r\n  'tablet': 768px,\r\n  'desktop': 980px,\r\n  'widescreen': 1200px,\r\n);\r\n\r\n// Keywords for include media mixin\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': (\r\n    '(-webkit-min-device-pixel-ratio: 1.5)',\r\n    '(min-resolution: 144dpi)',\r\n  ),\r\n  'retina3x': (\r\n    '(-webkit-min-device-pixel-ratio: 2.5)',\r\n    '(min-resolution: 240dpi)',\r\n  ),\r\n  'hover': (\r\n    '(hover: hover)' '(pointer: fine)',\r\n    '(-ms-high-contrast: none)',\r\n    '(-ms-high-contrast: active)',\r\n  ),\r\n  'theme-light': 'prefers-color-scheme: light',\r\n  'theme-dark': 'prefers-color-scheme: dark',\r\n  'ie': (\r\n    '(-ms-high-contrast: none)',\r\n    '(-ms-high-contrast: active)',\r\n  ),\r\n);\r\n\r\n:root {\r\n  // Breakpoints\r\n  --phone: #{map-get($breakpoints, 'phone')};\r\n  --tablet: #{map-get($breakpoints, 'tablet')};\r\n  --desktop: #{map-get($breakpoints, 'desktop')};\r\n  --widescreen: #{map-get($breakpoints, 'widescreen')};\r\n\r\n  // Colors\r\n  --color-white: #fff;\r\n  --color-black: rgb(230, 221, 221);\r\n  --color-grey: #999;\r\n  --color-blue: #39f;\r\n\r\n  // Fonts\r\n  --font-sans-serif: 'Open Sans', 'Helvetica Neue', Helvetica, sans-serif;\r\n  --font-serif: 'Open Sans', Times, Baskerville, Georgia, serif;\r\n\r\n  // Body base\r\n  --base-background-color: #fff;\r\n  --base-font-family: var(--font-sans-serif);\r\n  --base-font-size: 1.6rem;\r\n  --base-line-height: 1.2;\r\n  --base-text-color: var(--color-black);\r\n  --base-min-width: 320px;\r\n\r\n  // Links base\r\n  --base-link-color: var(--color-blue);\r\n\r\n  // Buttons base\r\n  --btn-color: var(--color-white);\r\n  --btn-background: var(--color-blue);\r\n  --btn-padding: 0.4em 0.7em;\r\n  --btn-font-size: 1.6rem;\r\n  --btn-font-family: var(--font-sans-serif);\r\n\r\n  // Forms base\r\n  --form-font-family: var(--font-sans-serif);\r\n  --form-element-padding: var(--btn-padding);\r\n  --form-element-border-color: var(--color-grey);\r\n  --form-element-focus-border-color: var(--color-black);\r\n  --placeholder-color: var(--color-grey);\r\n\r\n  // Headings base\r\n  --headings-font-family: 'SourceSansPro', 'Helvetica Neue', Helvetica, sans-serif;\r\n  --headings-color: var(--base-text-color);\r\n\r\n  // Base font styles for headings\r\n  --headings-sizes-h1: 3rem;\r\n  --headings-sizes-h2: 2.7rem;\r\n  --headings-sizes-h3: 2.4rem;\r\n  --headings-sizes-h4: 2.1rem;\r\n  --headings-sizes-h5: 1.7rem;\r\n  --headings-sizes-h6: 1.5rem;\r\n}\r\n",":root {\n  --phone: 480px;\n  --tablet: 768px;\n  --desktop: 980px;\n  --widescreen: 1200px;\n  --color-white: #fff;\n  --color-black: rgb(230, 221, 221);\n  --color-grey: #999;\n  --color-blue: #39f;\n  --font-sans-serif: \"Open Sans\", \"Helvetica Neue\", Helvetica, sans-serif;\n  --font-serif: \"Open Sans\", Times, Baskerville, Georgia, serif;\n  --base-background-color: #fff;\n  --base-font-family: var(--font-sans-serif);\n  --base-font-size: 1.6rem;\n  --base-line-height: 1.2;\n  --base-text-color: var(--color-black);\n  --base-min-width: 320px;\n  --base-link-color: var(--color-blue);\n  --btn-color: var(--color-white);\n  --btn-background: var(--color-blue);\n  --btn-padding: 0.4em 0.7em;\n  --btn-font-size: 1.6rem;\n  --btn-font-family: var(--font-sans-serif);\n  --form-font-family: var(--font-sans-serif);\n  --form-element-padding: var(--btn-padding);\n  --form-element-border-color: var(--color-grey);\n  --form-element-focus-border-color: var(--color-black);\n  --placeholder-color: var(--color-grey);\n  --headings-font-family: \"SourceSansPro\", \"Helvetica Neue\", Helvetica, sans-serif;\n  --headings-color: var(--base-text-color);\n  --headings-sizes-h1: 3rem;\n  --headings-sizes-h2: 2.7rem;\n  --headings-sizes-h3: 2.4rem;\n  --headings-sizes-h4: 2.1rem;\n  --headings-sizes-h5: 1.7rem;\n  --headings-sizes-h6: 1.5rem;\n}\n\n.clearfix:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto;\n}\n\n.ellipsis {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--base-text-color);\n  background: var(--base-background-color);\n  font: var(--base-font-size)/var(--base-line-height) var(--base-font-family);\n  min-width: var(--base-min-width);\n}\n\nh1 {\n  margin: 0;\n}\n\n.gm-style img {\n  max-width: none;\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6,\n.h {\n  font-family: var(--headings-font-family);\n  font-weight: bold;\n  color: var(--headings-color);\n}\n\nh1,\n.h1 {\n  font-size: var(--headings-sizes-h1);\n}\n\nh2,\n.h2 {\n  font-size: var(--headings-sizes-h2);\n}\n\nh3,\n.h3 {\n  font-size: var(--headings-sizes-h3);\n}\n\nh4,\n.h4 {\n  font-size: var(--headings-sizes-h4);\n}\n\nh5,\n.h5 {\n  font-size: var(--headings-sizes-h5);\n}\n\nh6,\n.h6 {\n  font-size: var(--headings-sizes-h6);\n}\n\np {\n  margin: 0 0 1em;\n}\n\na {\n  color: var(--base-link-color);\n}\na:focus {\n  text-decoration: none;\n}\n@media (hover: hover) and (pointer: fine), (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  a:hover {\n    text-decoration: none;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  .layout {\n    width: 1170px;\n  }\n}\n@media screen and (max-width: 980px) {\n  .layout {\n    max-width: 980px;\n  }\n}\nform,\nfieldset {\n  margin: 0;\n  padding: 0;\n  border-style: none;\n}\n\ninput[type=text],\ninput[type=tel],\ninput[type=email],\ninput[type=search],\ninput[type=password],\ntextarea {\n  appearance: none;\n  box-sizing: border-box;\n  font-family: var(--form-font-family);\n  border-radius: 0;\n  border: 0.1rem solid var(--form-element-border-color);\n  padding: var(--form-element-padding);\n}\ninput[type=text]:focus,\ninput[type=tel]:focus,\ninput[type=email]:focus,\ninput[type=search]:focus,\ninput[type=password]:focus,\ntextarea:focus {\n  border-color: var(--form-element-focus-border-color);\n}\ninput[type=text]::-webkit-input-placeholder,\ninput[type=tel]::-webkit-input-placeholder,\ninput[type=email]::-webkit-input-placeholder,\ninput[type=search]::-webkit-input-placeholder,\ninput[type=password]::-webkit-input-placeholder,\ntextarea::-webkit-input-placeholder {\n  color: var(--placeholder-color);\n}\ninput[type=text]::-moz-placeholder,\ninput[type=tel]::-moz-placeholder,\ninput[type=email]::-moz-placeholder,\ninput[type=search]::-moz-placeholder,\ninput[type=password]::-moz-placeholder,\ntextarea::-moz-placeholder {\n  opacity: 1;\n  color: var(--placeholder-color);\n}\ninput[type=text]:-moz-placeholder,\ninput[type=tel]:-moz-placeholder,\ninput[type=email]:-moz-placeholder,\ninput[type=search]:-moz-placeholder,\ninput[type=password]:-moz-placeholder,\ntextarea:-moz-placeholder {\n  color: var(--placeholder-color);\n}\ninput[type=text]:-ms-input-placeholder,\ninput[type=tel]:-ms-input-placeholder,\ninput[type=email]:-ms-input-placeholder,\ninput[type=search]:-ms-input-placeholder,\ninput[type=password]:-ms-input-placeholder,\ntextarea:-ms-input-placeholder {\n  color: var(--placeholder-color);\n}\ninput[type=text].placeholder,\ninput[type=tel].placeholder,\ninput[type=email].placeholder,\ninput[type=search].placeholder,\ninput[type=password].placeholder,\ntextarea.placeholder {\n  color: var(--placeholder-color);\n}\n\nselect {\n  border-radius: 0;\n}\n\ntextarea {\n  resize: vertical;\n  vertical-align: top;\n}\n\nbutton,\ninput[type=button],\ninput[type=reset],\ninput[type=file],\ninput[type=submit] {\n  appearance: none;\n  border-radius: 0;\n  cursor: pointer;\n  font-family: var(--form-font-family);\n}\n\n.hero-section {\n  position: relative;\n  min-height: 991px;\n}\n.hero-section .header {\n  margin-top: 40px;\n}\n.hero-section .header .layout {\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n}\n\n.slick-slider {\n  display: flex;\n}\n\n.slick-arrow {\n  position: absolute;\n  left: 350px;\n  z-index: 500;\n}\n.slick-arrow .slick-prev {\n  left: 250px;\n}\n\n.slick-arrow.slick-prev {\n  left: 250px;\n}\n\n.slick-list {\n  width: 100%;\n  height: 990px;\n  overflow: hidden;\n}\n\n.slick-track {\n  display: flex;\n}\n\n.hero-slider {\n  position: relative;\n}\n\n.hero-slider__item {\n  position: relative;\n  min-height: 100%;\n}\n\n.hero-content-wrap {\n  max-width: 800px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 5;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.title-holder {\n  margin: 0 auto;\n  padding: 45px 0;\n}\n.title-holder .title {\n  font-family: var(--base-font-family);\n  font-size: 72px;\n  font-weight: bold;\n  font-style: normal;\n  letter-spacing: 7.2px;\n  margin: 0;\n  text-align: center;\n}\n\n.hero-description {\n  position: relative;\n  margin: 47px 0 68px 0;\n  width: 580px;\n  font-family: \"Open Sans\";\n  font-size: 14px;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: center;\n  opacity: 0.7;\n}\n.hero-description p {\n  text-align: center;\n  margin: 0;\n}\n\n.img-wrap {\n  position: relative;\n}\n.img-wrap img {\n  min-width: 100%;\n  max-height: 1000px;\n}\n\n.img-wrap::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0.7;\n  background-color: #000000;\n  z-index: 5;\n}\n\n.hero-slogan {\n  font-family: \"Source Sans Pro\";\n  font-size: 24px;\n  letter-spacing: 1.2px;\n  margin: 0 auto;\n}\n\n.buttons-wrap {\n  display: flex;\n  justify-content: center;\n}\n.buttons-wrap :nth-child(2) {\n  margin-left: 30px;\n}\n\n.line-dot-wrap {\n  padding-top: 3px;\n  margin: 0 auto;\n  width: fit-content;\n  height: 10px;\n}\n.line-dot-wrap .dot {\n  width: 8px;\n  height: 8px;\n  background-color: #e74c3c;\n  border-radius: 50%;\n  position: relative;\n}\n.line-dot-wrap .dot::after {\n  position: absolute;\n  left: 19px;\n  top: 3px;\n  content: \"\";\n  width: 100px;\n  height: 2px;\n  opacity: 0.7;\n  background-color: #f1ebe7;\n}\n.line-dot-wrap .dot::before {\n  position: absolute;\n  right: 19px;\n  top: 3px;\n  content: \"\";\n  width: 100px;\n  height: 2px;\n  opacity: 0.7;\n  background-color: #f1ebe7;\n}\n\n.anchor {\n  position: absolute;\n  height: 64px;\n  width: 64px;\n  border-radius: 50%;\n  background-color: #f4f5f9;\n  margin-bottom: -30px;\n  box-shadow: 4px 4px 5px 0px rgba(238, 245, 249, 0.25);\n  top: 67%;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 5;\n}\n.anchor .anchor-img {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.cards {\n  min-height: 435px;\n  position: relative;\n  background-color: #ffffff;\n  padding-top: 115px;\n}\n.cards .layout {\n  display: flex;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n.cards::before {\n  position: absolute;\n  z-index: 5;\n  top: -80px;\n  right: 50vw;\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-left: 50vw solid #fff;\n  border-top: 80px solid transparent;\n}\n.cards::after {\n  z-index: 2;\n  position: absolute;\n  top: -80px;\n  left: 50vw;\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-right: 50vw solid #fff;\n  border-top: 80px solid transparent;\n}\n\n@media screen and (max-width: 980px) {\n  .title-holder .title {\n    font-size: 40px;\n  }\n}\n@media only screen and (max-width: 980px) and (max-width: 700px) {\n  .anchor {\n    top: 61%;\n  }\n}\n.history {\n  background-color: #f4f5f9;\n  min-height: 690px;\n  padding: 152px 0 50px 0;\n}\n.history .layout {\n  display: flex;\n  margin: 0 auto;\n  justify-content: center;\n}\n.history .layout .history-img {\n  padding-right: 78px;\n}\n.history .layout .h3-wrap {\n  border-left: 6px solid #e74c3c;\n  padding-left: 29px;\n}\n.history .layout .h3-wrap h3 {\n  margin-top: 0;\n  font-family: \"Source Sans Pro\";\n  font-size: 36px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 3.6px;\n  text-align: left;\n  color: #6a6a6a;\n}\n.history .layout p {\n  font-family: \"Source Sans Pro\";\n  font-size: 14px;\n  font-weight: normal;\n  font-style: normal;\n  line-height: 2;\n  letter-spacing: normal;\n  text-align: left;\n  color: #999999;\n}\n\n@media screen and (max-width: 1094px) {\n  .history .layout {\n    flex-wrap: wrap;\n    padding: 0 40px;\n  }\n  .history .layout .history-img {\n    padding-bottom: 50px;\n  }\n  .history .layout a {\n    display: block;\n    margin: 0 auto;\n  }\n}\n.services {\n  min-height: 768px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n.services .content {\n  width: 53%;\n  min-height: 768px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n  padding: 155px 80px 148px 0;\n  background-color: #202020;\n}\n.services .content .h3-wrap {\n  padding-right: 30px;\n  border-right: 6px solid #e74c3c;\n}\n.services .content .h3-wrap h3 {\n  margin: 0;\n  font-family: \"Source Sans Pro\";\n  font-size: 36px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 3.6px;\n  text-align: right;\n  color: #f4f5f9;\n}\n.services .content .section {\n  margin-top: 68px;\n  max-width: 600px;\n  position: relative;\n}\n.services .content .section h4 {\n  font-family: \"Open Sans\";\n  font-size: 18px;\n  font-weight: 600;\n  font-style: normal;\n  line-height: 1.61;\n  letter-spacing: normal;\n  text-align: right;\n  color: #e74c3c;\n}\n.services .content .section p {\n  text-align: right;\n  font-family: \"Source Sans Pro\";\n  font-size: 14px;\n  font-weight: normal;\n  font-style: normal;\n  line-height: 2.07;\n  letter-spacing: normal;\n  text-align: right;\n  color: #999999;\n}\n.services .content .section .figure-wrap {\n  position: absolute;\n  right: -110px;\n  top: 25%;\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.15);\n}\n.services .service-img {\n  width: 47%;\n}\n.slick-slide .content {\n  display: flex;\n  width: 100%;\n}\n\n.header {\n  position: absolute;\n  width: 100%;\n}\n\n@media screen and (max-width: 1200px) {\n  .header {\n    position: absolute;\n    width: 100%;\n  }\n  .header .layout {\n    margin: 0 auto;\n    max-width: 980px;\n    flex-direction: column;\n    align-items: center;\n  }\n  .header .layout .logo {\n    height: 100px;\n  }\n  .header .layout .logo img {\n    transform: translateX(-50%);\n  }\n}\n.logo img {\n  position: absolute;\n  z-index: 5;\n}\n\n.ul-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 730px;\n  min-height: 52px;\n  margin: 0;\n  padding-left: 0;\n}\n.ul-nav li {\n  font-family: \"Open Sans\";\n  font-size: 14px;\n  padding: 14px 0;\n  font-weight: normal;\n  z-index: 5;\n  list-style: none;\n  color: #f4f5f9;\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n}\n.ul-nav li:hover {\n  color: #e74c3c;\n  border-bottom: solid 2px #e74c3c;\n}\n\n.cta-btn {\n  display: inline-block;\n  font-family: \"Open Sans\";\n  font-weight: bold;\n  font-style: normal;\n  font-size: 14px;\n  color: #ffffff;\n  min-width: 225px;\n  padding: 20px;\n  border: solid 1px #ffffff;\n  background-color: transparent;\n  border-radius: 5px;\n  text-decoration: none;\n  text-align: center;\n}\n.cta-btn .text {\n  margin: 0 auto;\n  padding: 0;\n  border-color: transparent;\n}\n.cta-btn:hover {\n  box-shadow: 0px 2px 4.8px 0.3px rgba(0, 0, 0, 0.25);\n  background-color: #e74c3c;\n  border-color: #e74c3c;\n}\n.cta-btn:hover .text {\n  margin: 0 auto;\n  padding: 0;\n  border-color: transparent;\n}\n.cta-btn--small {\n  font-weight: 600;\n  min-width: 145px;\n}\n.cta-btn--red {\n  background-color: #e74c3c;\n  border-color: #e74c3c;\n}\n\n.arrow-btn {\n  z-index: 2;\n  display: block;\n  position: absolute;\n  left: 4vw;\n  top: 33%;\n  width: 45px;\n  height: 45px;\n  border-radius: 2px;\n  color: #39332d;\n  border: transparent;\n  opacity: 0.7;\n  background-color: #6f6864;\n  padding: 0 10px;\n  font-size: 20px;\n}\n.arrow-btn .fa-angle-left {\n  line-height: inherit;\n  color: #303030;\n}\n.arrow-btn:hover {\n  background-color: #e74c3c;\n  opacity: 1;\n  color: white;\n}\n.arrow-btn:hover .fa-angle-left {\n  line-height: inherit;\n  color: white;\n}\n.arrow-btn--right {\n  left: 92vw;\n  transform: rotate(180deg);\n}\n@media screen and (max-width: 1200px) {\n  .arrow-btn--right {\n    left: calc(90vw - (1vw * 0.95));\n  }\n}\n\n.option-card {\n  max-width: 250px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.option-card .card-content-wrap h4 {\n  font-family: \"Open Sans\";\n  font-size: 18px;\n  font-weight: 600;\n  font-style: normal;\n  text-align: center;\n  color: #6a6a6a;\n  margin-bottom: 40px;\n}\n.option-card .card-content-wrap p {\n  font-family: \"Source Sans Pro\";\n  font-size: 12px;\n  font-weight: 300;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.67;\n  letter-spacing: 0.9px;\n  text-align: center;\n  color: #999999;\n}\n.option-card .card-content-wrap:before {\n  position: absolute;\n  width: 41px;\n  content: \"\";\n  left: 104px;\n  bottom: 90px;\n  border-radius: 5px;\n  border: solid 1px #6a6a6a;\n}\n.option-card .figure-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 73px;\n  height: 73px;\n  border: solid 1px #999999;\n  transition: transform 0.3s;\n}\n.option-card .figure-wrap img {\n  display: block;\n  margin: 0 auto;\n  transition: transform 0.3s;\n}\n.option-card:hover .figure-wrap {\n  border: solid 1px #e74c3c;\n  transform: rotate(45deg);\n}\n.option-card:hover .figure-wrap img {\n  transform: rotate(-45deg);\n}\n.option-card:hover h4 {\n  color: #e74c3c;\n}","// This is the most used helpers.\r\n//\r\n// You can remove or add your own helpers in this file.\r\n\r\n%listreset {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n// clearfix\r\n%clearfix {\r\n &:after {\r\n    content: '';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.clearfix {\r\n  @extend %clearfix;\r\n}\r\n\r\n/// Only display content to screen readers\r\n/// @link http://a11yproject.com/posts/how-to-hide-content/\r\n\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0,0,0,0);\r\n  border: 0;\r\n}\r\n\r\n/// Use in conjunction with .sr-only to only display content when it's focused.\r\n/// Useful for \"Skip to main content\"\r\n/// @link http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\r\n\r\n.sr-only-focusable {\r\n  &:active,\r\n  &:focus {\r\n    position: static;\r\n    width: auto;\r\n    height: auto;\r\n    margin: 0;\r\n    overflow: visible;\r\n    clip: auto;\r\n  }\r\n}\r\n\r\n/// * Helper class to truncate and add ellipsis to a string too long for it to fit\r\n/// * on a single line.\r\n/// * 1. Prevent content from wrapping, forcing it on a single line.\r\n/// * 2. Add ellipsis at the end of the line.\r\n\r\n.ellipsis {\r\n  @include ellipsis;\r\n}\r\n","// Most used mixins.\r\n//\r\n// Note: If you use a framework (bootstrap, zurb etc.) that includes mixins you can import them too or remove this file.\r\n\r\n\r\n/// Mixin helping with long string of the url\r\n/// @link https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/\r\n/// @example @include word-wrap;\r\n\r\n@mixin word-wrap() {\r\n  overflow-wrap: break-word;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  word-break: break-word;\r\n  hyphens: auto;\r\n}\r\n\r\n/// Preventing Overflow with Ellipsis\r\n/// @example @include ellipsis;\r\n\r\n@mixin ellipsis() {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/// Vertical align el inside parent with fixed height/min-height\r\n/// @example @include v-align;\r\n/// or @include v-align(250px);\r\n/// or @include v-align(250px, bottom, before);\r\n\r\n@mixin v-align($va-height: 100%, $va-direction: middle, $va-pseudo: after) {\r\n  white-space: nowrap;\r\n  text-align: center;\r\n\r\n  &:#{$va-pseudo} {\r\n    content: '';\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    width: 0;\r\n    min-height: $va-height;\r\n  }\r\n\r\n  > * {\r\n    white-space: normal;\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    max-width: 99%;\r\n  }\r\n}\r\n\r\n/// Vertical align a pair of child el inside parent\r\n/// @example @include v-align-pair(image, text);\r\n/// or @include v-align-pair(image, text, bottom);\r\n/// or @include v-align-pair(image, text, middle, 200px);\r\n\r\n@mixin v-align-pair($child-name1, $child-name2, $valign: middle, $width1: auto, $width2: auto ) {\r\n  display: table;\r\n  .#{$child-name1}{\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width1; \r\n  }\r\n  .#{$child-name2} {\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width2;\r\n  }\r\n}\r\n\r\n\r\n/// Vertical align el\r\n/// @example @include vertical-align-el;\r\n\r\n@mixin vertical-align-el {\r\n  position: relative;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Mixin helping defining both `width` and `height` simultaneously.\r\n/// @author Hugo Giraudel\r\n/// @access public\r\n/// @param {Length} $width - Element’s `width`\r\n/// @param {Length} $height - Element’s `height`\r\n/// @example @include size(20px);\r\n/// @include size(20px, 30px);\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// Font-smothing\r\n/// @example @include font-smoothing(on);\r\n/// @include font-smoothing(off);\r\n@mixin font-smoothing($value: on){\r\n  @if $value == on{\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  @else{\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    -moz-osx-font-smoothing: auto;\r\n  }\r\n}\r\n\r\n\r\n/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n/// @example @include hide-text;\r\n\r\n@mixin hide-text {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n/// Creates a visual triangle\r\n/// values—foreground-color background-color.\r\n/// @link http://bourbon.io/docs/#triangle\r\n/// @param $size - argument can take one or two values—width height\r\n/// @param $color - argument can take one or two \r\n/// @param $direction - value: up, down, left, right, up-right, up-left, down-right, down-left\r\n/// @example @include triangle(12px, gray, down);\r\n/// @include triangle(12px 6px, gray blue, up-left);\r\n\r\n@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left: $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left: $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n\r\n\r\n/// Animate css properties\r\n/// @example @include animate(color);\r\n/// or @include animate(color width);\r\n/// or @include animate(color width, 1s, linear);\r\n/// or @include animate(color width, 1s, ease-in, 0.5s); - defining delay ALL params should be passed!\r\n\r\n$animation-speed: 0.3s !default;\r\n\r\n@mixin animate($properties, $duration: $animation-speed, $easing: ease-in-out, $delay: false) {\r\n  @if ($properties and $duration and $easing and $delay) {\r\n    $list:();\r\n    @each $prop in $properties {\r\n      $str: #{$prop} #{$duration} #{$easing} #{$delay};\r\n      $list: append($list, $str, comma);\r\n    }\r\n    transition: $list;\r\n  } @else {\r\n    $list:();\r\n    @each $prop in $properties {\r\n      $str: #{$prop} #{$duration} #{$easing};\r\n      $list: append($list, $str, comma);\r\n    }\r\n    transition: $list;\r\n  }\r\n}\r\n\r\n\r\n/// Mixin for styling form-placeholders\r\n/// @example @include placeholder { color: red; }\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder {@content;}\r\n  &::-moz-placeholder {opacity: 1; @content;}\r\n  &:-moz-placeholder {@content;}\r\n  &:-ms-input-placeholder {@content;}\r\n  &.placeholder {@content;}\r\n}\r\n","// This is base reset for global components.\r\n//\r\n// Note: If you use a framework that includes base styling then you need to remove this file.\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n\r\nbody {\r\n  @include font-smoothing(on);\r\n  color: var(--base-text-color);\r\n  background: var(--base-background-color);\r\n  font: var(--base-font-size) / var(--base-line-height) var(--base-font-family);\r\n  min-width: var(--base-min-width);\r\n}\r\n\r\n// adaptive images\r\n// img {\r\n//   min-width: 100%;\r\n//   min-height: 1px;\r\n//   height: auto;\r\n// }\r\nh1{\r\n  margin: 0;\r\n}\r\n\r\n// google map fix\r\n.gm-style img {\r\n  max-width: none;\r\n}\r\n","// Typography\r\n//\r\n// Base font styles for headings and links.\r\n\r\nh1,\r\n.h1,\r\nh2,\r\n.h2,\r\nh3,\r\n.h3,\r\nh4,\r\n.h4,\r\nh5,\r\n.h5,\r\nh6,\r\n.h6,\r\n.h {\r\n  font-family: var(--headings-font-family);\r\n  font-weight: bold;\r\n  // margin: 0 0 0.5em;\r\n  color: var(--headings-color);\r\n}\r\n\r\nh1,\r\n.h1 {\r\n  font-size: var(--headings-sizes-h1);\r\n}\r\n\r\nh2,\r\n.h2 {\r\n  font-size: var(--headings-sizes-h2);\r\n}\r\n\r\nh3,\r\n.h3 {\r\n  font-size: var(--headings-sizes-h3);\r\n}\r\n\r\nh4,\r\n.h4 {\r\n  font-size: var(--headings-sizes-h4);\r\n}\r\n\r\nh5,\r\n.h5 {\r\n  font-size: var(--headings-sizes-h5);\r\n}\r\n\r\nh6,\r\n.h6 {\r\n  font-size: var(--headings-sizes-h6);\r\n}\r\n\r\np {\r\n  margin: 0 0 1em;\r\n}\r\n\r\na {\r\n  color: var(--base-link-color);\r\n  &:focus {\r\n    text-decoration: none;\r\n  }\r\n  @include media('hover') {\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n}\r\n@media screen and (min-width: 1200px) {\r\n  .layout {\r\n    width: 1170px;\r\n    // margin: 0 auto;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 980px) {\r\n  .layout {\r\n    max-width: 980px;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n////\r\n/// `include-media-or` - An `include-media` fork, enabling OR conjunctions and nested queries\r\n/// Author: Rouven Bühlmann (@nirazul)\r\n///\r\n/// This project is licensed under the terms of the MIT license\r\n////\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': ('(-webkit-min-device-pixel-ratio: 2)', '(min-resolution: 192dpi)', '(min-resolution: 2dppx)'),\r\n  'retina3x': ('(-webkit-min-device-pixel-ratio: 3)', '(min-resolution: 350dpi)', '(min-resolution: 3dppx)')\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Get a shallow list of resolved feature queries\r\n///\r\n/// @param {String} $queries - A nested list structure\r\n/// @param {Boolean} $do-parse - Try to parse expressions\r\n///\r\n/// @return {List} - A one item deep nested list like `(a b, c d e)`\r\n///\r\n@function resolve-feature-queries($queries, $do-parse: true) {\r\n  $separator: list-separator($queries);\r\n  $result: if($separator == 'space', ((), ), ());\r\n\r\n  @each $query in $queries {\r\n    $chainable-queries: ();\r\n\r\n    @if (type-of($query) == 'list') {\r\n      // List item is a list itself\r\n      $chainable-queries: resolve-feature-queries($query);\r\n    } @else {\r\n      // List item is a string\r\n      $parsed-query: if($do-parse, parse-expression($query), $query);\r\n\r\n      @if (type-of($parsed-query) == 'list') {\r\n        // Parsed expression is a list\r\n        $chainable-queries: resolve-feature-queries($parsed-query, false);\r\n      } @else {\r\n        // Parsed expression is a string\r\n        $chainable-queries: ($parsed-query);\r\n      }\r\n    }\r\n\r\n    $result: append-feature-query($result, $chainable-queries, $separator);\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Combine two query lists as a logical AND / OR operation\r\n///\r\n/// @param {List} $base-queries - The host list\r\n/// @param {List} $append-queries - The list that is being appended\r\n/// @param {String} $separator - Either `space` or `comma`\r\n///\r\n/// @return {List} - A one item deep nested list like `(a b, c d e)`\r\n///\r\n@function append-feature-query($base-queries, $append-queries, $separator) {\r\n  $result: if($separator == 'space', (), $base-queries);\r\n\r\n  @each $append-query in $append-queries {\r\n    @if ($separator == 'space') {\r\n      // Logical AND\r\n      @each $base-query in $base-queries {\r\n        $updated-query: join($base-query, $append-query, $separator);\r\n        $result: append($result, $updated-query, 'comma');\r\n      }\r\n    } @else {\r\n      // Logical OR\r\n      $result: append($result, $append-query, 'comma');\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parse a list of resolved expressions to return a valid media-query\r\n///\r\n/// @param {List} $queries - A one item deep nested list like `(a b, c d e)`\r\n///\r\n/// @return {String} - A valid media-query string\r\n///\r\n@function parse-media-query($queries) {\r\n  $result: null;\r\n  $flat-queries: ();\r\n  $separator: list-separator($queries);\r\n  $conjunction: if($separator == 'space', ' and ', ', ');\r\n\r\n  @if (type-of($queries) == 'string') {\r\n    @return $queries;\r\n  }\r\n\r\n  @each $query in $queries {\r\n    @if (type-of($query) == 'list') {\r\n      $flat-queries: append($flat-queries, parse-media-query($query));\r\n    } @else {\r\n      $flat-queries: append($flat-queries, $query);\r\n    }\r\n  }\r\n\r\n  @for $i from 1 through length($flat-queries) {\r\n    $e: nth($flat-queries, $i);\r\n    $result: unquote('#{$result}#{$e}#{if($i != length($flat-queries), $conjunction, '')}');\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  $is-list-mode: (length($conditions) == 1 and type-of(nth($conditions, 1)) == 'list');\r\n\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...) and not $is-list-mode) {\r\n    @content;\r\n  } @else if ($im-media-support and $is-list-mode) {\r\n    // List mode with AND / OR conditions\r\n    @media #{unquote(parse-media-query(resolve-feature-queries(nth($conditions, 1))))} {\r\n      @content;\r\n    }\r\n\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    // Legacy mode\r\n    @media #{unquote(parse-media-query(parse-expression(nth($conditions, 1))))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","// This is base reset for form elements.\r\n//\r\n// Note: If you use a framework that includes form styling then you need to remove this file.\r\n\r\nform,\r\nfieldset {\r\n  margin: 0;\r\n  padding: 0;\r\n  border-style: none;\r\n}\r\n\r\ninput[type='text'],\r\ninput[type='tel'],\r\ninput[type='email'],\r\ninput[type='search'],\r\ninput[type='password'],\r\ntextarea {\r\n  appearance: none;\r\n  box-sizing: border-box;\r\n  font-family: var(--form-font-family);\r\n  border-radius: 0;\r\n  border: 0.1rem solid var(--form-element-border-color);\r\n  padding: var(--form-element-padding);\r\n\r\n  &:focus {\r\n    border-color: var(--form-element-focus-border-color);\r\n  }\r\n\r\n  @include placeholder {\r\n    color: var(--placeholder-color);\r\n  }\r\n}\r\n\r\nselect {\r\n  border-radius: 0;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton,\r\ninput[type='button'],\r\ninput[type='reset'],\r\ninput[type='file'],\r\ninput[type='submit'] {\r\n  appearance: none;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  font-family: var(--form-font-family);\r\n}\r\n",".hero-section {\r\n  position: relative;\r\n  min-height: 991px;\r\n  .header {\r\n    margin-top: 40px;\r\n    .layout {\r\n      margin: 0 auto;\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n  }\r\n}\r\n.slick-slider {\r\n  display: flex;\r\n}\r\n.slick-arrow {\r\n  position: absolute;\r\n  left: 350px;\r\n  z-index: 500;\r\n  .slick-prev {\r\n    left: 250px;\r\n  }\r\n}\r\n.slick-arrow.slick-prev {\r\n  left: 250px;\r\n}\r\n.slick-list {\r\n  width: 100%;\r\n  height: 990px;\r\n  overflow: hidden;\r\n}\r\n.slick-track {\r\n  display: flex;\r\n}\r\n.hero-slider {\r\n  position: relative;\r\n}\r\n.hero-slider__item {\r\n  position: relative;\r\n  min-height: 100%;\r\n}\r\n.hero-content-wrap {\r\n  max-width: 800px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.title-holder {\r\n  margin: 0 auto;\r\n  padding: 45px 0;\r\n  .title {\r\n    font-family: var(--base-font-family);\r\n    font-size: 72px;\r\n    font-weight: bold;\r\n    font-style: normal;\r\n    letter-spacing: 7.2px;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n}\r\n.hero-description {\r\n  position: relative;\r\n  margin: 47px 0 68px 0;\r\n  width: 580px;\r\n  font-family: 'Open Sans';\r\n  font-size: 14px;\r\n  line-height: 1.71;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  opacity: 0.7;\r\n  p {\r\n    text-align: center;\r\n    margin: 0;\r\n  }\r\n}\r\n.img-wrap {\r\n  position: relative;\r\n  img {\r\n    min-width: 100%;\r\n    max-height: 1000px;\r\n  }\r\n}\r\n\r\n.img-wrap::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  opacity: 0.7;\r\n  background-color: #000000;\r\n  z-index: 5;\r\n}\r\n.hero-slogan {\r\n  font-family: 'Source Sans Pro';\r\n  font-size: 24px;\r\n  letter-spacing: 1.2px;\r\n  margin: 0 auto;\r\n}\r\n.buttons-wrap {\r\n  display: flex;\r\n  justify-content: center;\r\n  :nth-child(2) {\r\n    margin-left: 30px;\r\n  }\r\n}\r\n.line-dot-wrap {\r\n  padding-top: 3px;\r\n  margin: 0 auto;\r\n  width: fit-content;\r\n  height: 10px;\r\n  .dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #e74c3c;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    &::after {\r\n      position: absolute;\r\n      left: 19px;\r\n      top: 3px;\r\n      content: '';\r\n      width: 100px;\r\n      height: 2px;\r\n      opacity: 0.7;\r\n      background-color: #f1ebe7;\r\n    }\r\n    &::before {\r\n      position: absolute;\r\n      right: 19px;\r\n      top: 3px;\r\n      content: '';\r\n      width: 100px;\r\n      height: 2px;\r\n      opacity: 0.7;\r\n      background-color: #f1ebe7;\r\n    }\r\n  }\r\n}\r\n.anchor {\r\n  position: absolute;\r\n  height: 64px;\r\n  width: 64px;\r\n  border-radius: 50%;\r\n  background-color: #f4f5f9;\r\n  margin-bottom: -30px;\r\n  box-shadow: 4px 4px 5px 0px rgba(238, 245, 249, 0.25);\r\n  top: 67%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 5;\r\n  .anchor-img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n.cards {\r\n  min-height: 435px;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  padding-top: 115px;\r\n  .layout {\r\n    display: flex;\r\n    margin: 0 auto;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n  &::before {\r\n    position: absolute;\r\n    z-index: 5;\r\n    top: -80px;\r\n    right: 50vw;\r\n    content: '';\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 50vw solid #fff;\r\n    border-top: 80px solid transparent;\r\n  }\r\n  &::after {\r\n    z-index: 2;\r\n    position: absolute;\r\n    top: -80px;\r\n    left: 50vw;\r\n    content: '';\r\n    width: 0;\r\n    height: 0;\r\n    border-right: 50vw solid #fff;\r\n    border-top: 80px solid transparent;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 980px) {\r\n  .title-holder {\r\n    .title {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 700px) {\r\n    .anchor {\r\n       top: 61%;\r\n    }\r\n  }\r\n}\r\n",".history {\n  background-color: #f4f5f9;\n  min-height: 690px;\n  padding: 152px 0 50px 0;\n  .layout {\n    display: flex;\n    margin: 0 auto;\n    justify-content: center;\n    .history-img {\n      padding-right: 78px;\n    }\n    .h3-wrap {\n      border-left: 6px solid #e74c3c;\n      padding-left: 29px;\n      h3 {\n        margin-top: 0;\n        font-family: 'Source Sans Pro';\n        font-size: 36px;\n        font-weight: bold;\n        font-style: normal;\n        line-height: normal;\n        letter-spacing: 3.6px;\n        text-align: left;\n        color: #6a6a6a;\n      }\n    }\n    p {\n      font-family: 'Source Sans Pro';\n      font-size: 14px;\n      font-weight: normal;\n      font-style: normal;\n      line-height: 2;\n      letter-spacing: normal;\n      text-align: left;\n      color: #999999;\n    }\n  }\n}\n\n@media screen and (max-width: 1094px) {\n  .history {\n    .layout {\n        .history-img {\n      padding-bottom: 50px;\n    }\n      flex-wrap: wrap;\n      padding: 0 40px;\n      a{\n        display: block;\n        margin: 0 auto;\n      }\n    }\n  }\n}\n",".services {\n  min-height: 768px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // margin-right: -90px;\n  width: 100%;\n\n  .content {\n    width: 53%;\n    min-height: 768px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: flex-end;\n    padding: 155px 80px 148px 0;\n    background-color: #202020;\n    .h3-wrap {\n      padding-right: 30px;\n      border-right: 6px solid #e74c3c;\n      h3 {\n        margin: 0;\n        font-family: 'Source Sans Pro';\n        font-size: 36px;\n        font-weight: bold;\n        font-style: normal;\n        line-height: normal;\n        letter-spacing: 3.6px;\n        text-align: right;\n        color: #f4f5f9;\n      }\n    }\n    .section {\n      margin-top: 68px;\n      max-width: 600px;\n      position: relative;\n      h4 {\n        font-family: 'Open Sans';\n        font-size: 18px;\n        font-weight: 600;\n        font-style: normal;\n        line-height: 1.61;\n        letter-spacing: normal;\n        text-align: right;\n        color: #e74c3c;\n      }\n      p {\n        text-align: right;\n        font-family: 'Source Sans Pro';\n        font-size: 14px;\n        font-weight: normal;\n        font-style: normal;\n        line-height: 2.07;\n        letter-spacing: normal;\n        text-align: right;\n        color: #999999;\n      }\n      .figure-wrap {\n        position: absolute;\n        right: -110px;\n        top: 25%;\n        width: 64px;\n        height: 64px;\n        border-radius: 50%;\n        background-color: #ffffff;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 0 0 0 4px rgba($color: #ffffff, $alpha: 0.15);\n      }\n    }\n  }\n  .service-img {\n    width: 47%;\n    .slide {\n      //       width: 40%\n    }\n  }\n}\n// .content-slider {\n.slick-slide {\n  // width: 55%;\n\n  .content {\n    display: flex;\n    width: 100%;\n  }\n  // }\n}\n",".header {\n  position: absolute;\n  width: 100%;\n}\n@media screen and (max-width: 1200px) {\n  .header {\n    position: absolute;\n    width: 100%;\n    .layout {\n      margin: 0 auto;\n      max-width: 980px;\n      flex-direction: column;\n      align-items: center;\n      .logo{\n        // display: block;\n     \n        height: 100px;\n        img{\n          transform: translateX(-50%);\n        }\n      }\n    }\n  }\n}\n\n.logo img {\n  position: absolute;\n  z-index: 5;\n}\nnav {\n}\n.ul-nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 730px;\n  min-height: 52px;\n  margin: 0;\n  padding-left:0 ;\n  li {\n    font-family: 'Open Sans';\n    font-size: 14px;\n    padding: 14px 0;\n    font-weight: normal;\n    z-index: 5;\n    list-style: none;\n    color: #f4f5f9;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n    &:hover {\n      color: #e74c3c;\n      border-bottom: solid 2px #e74c3c;\n    }\n  }\n}\n",".cta-btn {\r\n  display: inline-block;\r\n  font-family: 'Open Sans';\r\n  font-weight: bold;\r\n  font-style: normal;\r\n  font-size: 14px;\r\n  color: #ffffff;\r\n  min-width: 225px;\r\n  padding: 20px;\r\n  border: solid 1px #ffffff;\r\n  background-color: transparent;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  .text {\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    border-color: transparent;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 4.8px 0.3px rgba(0, 0, 0, 0.25);\r\n    background-color: #e74c3c;\r\n    border-color: #e74c3c;\r\n    .text {\r\n      margin: 0 auto;\r\n      padding: 0;\r\n      border-color: transparent;\r\n    }\r\n  }\r\n  &--small {\r\n    font-weight: 600;\r\n    min-width: 145px;\r\n  }\r\n  &--red {\r\n    background-color: #e74c3c;\r\n    border-color: #e74c3c;\r\n  }\r\n  \r\n}\r\n",".arrow-btn {\r\n  z-index: 2;\r\n  display: block;\r\n  position: absolute;\r\n  left: 4vw;\r\n  top: 33%;\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 2px;\r\n  color: #39332d;\r\n  border: transparent;\r\n  opacity: 0.7;\r\n  background-color: #6f6864;\r\n  padding: 0 10px;\r\n  font-size: 20px;\r\n  .fa-angle-left {\r\n    line-height: inherit;\r\n    color: #303030;\r\n  }\r\n  &:hover {\r\n    background-color: #e74c3c;\r\n    opacity: 1;\r\n    color: white;\r\n    .fa-angle-left {\r\n      line-height: inherit;\r\n      color: white;\r\n    }\r\n  }\r\n  &--right {\r\n    left: 92vw;\r\n    transform: rotate(180deg);\r\n  }\r\n  @media screen and (max-width: 1200px) {\r\n    &--right {\r\n      left: calc(90vw - (1vw * 0.95));\r\n    }\r\n  }\r\n}\r\n",".option-card {\n  max-width: 250px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .card-content-wrap {\n    h4 {\n      font-family: 'Open Sans';\n      font-size: 18px;\n      font-weight: 600;\n      font-style: normal;\n      text-align: center;\n      color: #6a6a6a;\n      margin-bottom: 40px;\n    }\n    p {\n      font-family: 'Source Sans Pro';\n      font-size: 12px;\n      font-weight: 300;\n      font-stretch: normal;\n      font-style: normal;\n      line-height: 1.67;\n      letter-spacing: 0.9px;\n      text-align: center;\n      color: #999999;\n    }\n    &:before {\n      position: absolute;\n      width: 41px;\n      content: '';\n      left: 104px;\n      bottom: 90px;\n      border-radius: 5px;\n      border: solid 1px #6a6a6a;\n    }\n  }\n\n  .figure-wrap {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 73px;\n    height: 73px;\n    border: solid 1px #999999;\n    transition: transform 0.3s;\n    img {\n      display: block;\n      margin: 0 auto;\n      transition: transform 0.3s;\n    }\n  }\n  &:hover {\n    .figure-wrap {\n      border: solid 1px #e74c3c;\n      transform: rotate(45deg);\n      img {\n        transform: rotate(-45deg);\n      }\n    }\n    h4 {\n      color: #e74c3c;\n    }\n  }\n}\n  @media screen and (max-width: 1200px) {\n  \n  }\n"]}